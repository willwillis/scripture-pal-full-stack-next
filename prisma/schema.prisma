generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model books {
  book_lds_url     String?
  book_long_title  String?
  book_short_title String?
  book_subtitle    String?
  book_title       String?
  id               Int        @default(autoincrement()) @id
  volume_id        Int?
  volumes          volumes?   @relation(fields: [volume_id], references: [id])
  chapters         chapters[]
}

model chapters {
  book_id        Int?
  chapter_number Int?
  id             Int      @default(autoincrement()) @id
  books          books?   @relation(fields: [book_id], references: [id])
  verses         verses[]
}

model verses {
  chapter_id     Int?
  id             Int       @default(autoincrement()) @id
  scripture_text String?
  verse_number   Int?
  chapters       chapters? @relation(fields: [chapter_id], references: [id])
}

model volumes {
  id                 Int     @default(autoincrement()) @id
  volume_lds_url     String?
  volume_long_title  String?
  volume_short_title String?
  volume_subtitle    String?
  volume_title       String?
  books              books[]
}

model User {
  id        Int       @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  email     String    @unique
  name      String?
  password  String
  // @onDelete(CASCADE)
  posts     Post[]
  group     Group?    @relation(fields: [groupId], references: [id])
  groupId   Int?
  // @onDelete(SET_NULL)
  comments  Comment[]
}

model Post {
  id        Int       @default(autoincrement()) @id
  published Boolean   @default(false)
  title     String
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  Int?
  // @onDelete(CASCADE)
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        Int      @default(autoincrement()) @id
  contain   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Group {
  id        Int      @default(autoincrement()) @id
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // @onDelete(SET_NULL)
  users     User[]
}